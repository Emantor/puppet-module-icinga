#
# THIS FILE IS MANAGED BY PUPPET
# icinga/templates/server/cgi.cfg.erb
#

# MAIN CONFIGURATION FILE
# This tells the CGIs where to find your main configuration file.
# The CGIs will read the main and host config files for any other
# data they might need.

main_config_file=<%= @main_config_file %>


# STANDALONE INSTALLATION
# This is only useful in an Icinga 2 setup (or any other setup
# containing multiple Classic UI installs). If you have installed
# Icinga 2 with compat layer and classic-ui, you can set this
# to 1. Otherwise leave it at 0.
# Enabling this option ignores main_config_file setting.
#
# NOTE: Check also the "Standalone (Icinga2) section" at the bottom
# if this option is switched on!


standalone_installation=<%= @standalone_installation %>

# ATTRIBUTE BASED AUTHORIZATION FILE
# This option will include a file defining authorization based on
# attributes.

<%= "authorization_config_file=#{@authorized_config_file}\n" if @authorized_config_file -%>

# PHYSICAL HTML PATH
# This is the path where the HTML files for Icinga reside.  This
# value is used to locate the logo images needed by the statusmap
# and statuswrl CGIs.

physical_html_path=<%= @physical_html_path %>



# URL HTML PATH
# This is the path portion of the URL that corresponds to the
# physical location of the Icinga HTML files (as defined above).
# This value is used by the CGIs to locate the online documentation
# and graphics.  If you access the Icinga pages with an URL like
# http://www.myhost.com/icinga, this value should be '/icinga'
# (without the quotes).

url_html_path=<%= @url_html_path %>


# URL STYLESHEETS PATH
# This option allows to define an url stylesheet path other than the
# default ($url_html_path/stylesheets). This will be useful when
# adding custom stylesheets in another location.
# If not set, the default location will be used.

url_stylesheets_path=<%= @url_stylesheets_path %>

# HTTP CHARSET
# This defines charset that is sent with HTTP headers.

http_charset=<%= @http_charset %>


# CONTEXT-SENSITIVE HELP
# This option determines whether or not a context-sensitive
# help icon will be displayed for most of the CGIs.
# Values: 0 = disables context-sensitive help
#         1 = enables context-sensitive help

show_context_help=<%= @show_context_help %>


# HIGHLIGHT TABLE ROWS
# This option allows you to define if table rows in status.cgi
# will be highlighted or not.
# Values: 0 = disables row highlighting
#	  1 = enables row highlighting

highlight_table_rows=<%= @highlight_table_rows %>



# PENDING STATES OPTION
# This option determines what states should be displayed in the web
# interface for hosts/services that have not yet been checked.
# Values: 0 = leave hosts/services that have not been check yet in their original state
#         1 = mark hosts/services that have not been checked yet as PENDING

use_pending_states=<%= @use_pending_states %>


# Logging

# USE LOGGING
# If you want to log information from cgi's (e.g. all submitted commands)
# then set this option to 1, default is 0 (off).
# WARNING:
# This log is highly experimental and changes may occure without notice. Use at your own risk!!

use_logging=<%= @use_logging %>


# CGI LOG FILE
# This is the cgi log file for information about what users are doing.
# At the moment only submitted commands from cmd.cgi will be logged.

cgi_log_file=<%= @cgi_log_file %>


# CGI LOG ROTATION METHOD
# This is the log rotation method that should be used to rotate
# the cgi log file. Values are as follows..
#	n	= None - don't rotate the log
#	h	= Hourly rotation (top of the hour)
#	d	= Daily rotation (midnight every day)
#	w	= Weekly rotation (midnight on Saturday evening)
#	m	= Monthly rotation (midnight last day of month)

cgi_log_rotation_method=<%= @cgi_log_rotation_method %>


# CGI LOG ARCHIVE PATH
# This is the directory where archived (rotated) cgi log files should be
# placed (assuming you've chosen to do log rotation).

cgi_log_archive_path=<%= @cgi_log_archive_path %>


# FORCE COMMENT
# This option forces the users of to comment every action they perform.
# The comments get logged into cgi log file. This option only has effect
# if logging is switched on. See option "use_logging"
# Default  is 0 (off), to activate it set it to 1 (on).

enforce_comments_on_actions=<%= @enforce_comments_on_actions %>


# SEND ACK NOTIFICATIONS
# This options determines whether the initial state of the
# checkbox "Send Notifications" when acknowledging a problem.
# A value of 1 ticks the checkbox and 0 does not.  The default
# is 1, which will send notifications on acknowledged problems.

send_ack_notifications=<%= @send_ack_notifications %>

# FIRST DAY OF WEEK
# Here you can set if your week starts on sunday or monday.
# Default is 0 (Sunday), set it to 1 if your week start monday.

first_day_of_week=<%= @first_day_of_week %>


# NAGIOS PROCESS CHECK COMMAND
# This is the full path and filename of the program used to check
# the status of the Nagios process.  It is used only by the CGIs
# and is completely optional.  However, if you don't use it, you'll
# see warning messages in the CGIs about the Nagios process
# not running and you won't be able to execute any commands from
# the web interface.  The program should follow the same rules
# as plugins; the return codes are the same as for the plugins,
# it should have timeout protection, it should output something
# to STDIO, etc.
#
# Note: The command line for the check_nagios plugin below may
# have to be tweaked a bit, as different versions of the plugin
# use different command line arguments/syntaxes.
icinga_check_command=<%= @icinga_check_command %>


# AUTHENTICATION USAGE
# This option controls whether or not the CGIs will use any
# authentication when displaying host and service information, as
# well as committing commands to Icinga for processing.
#
# Read the HTML documentation to learn how the authorization works!
#
# NOTE: It is a really *bad* idea to disable authorization, unless
# you plan on removing the command CGI (cmd.cgi)!  Failure to do
# so will leave you wide open to kiddies messing with Icinga and
# possibly hitting you with a denial of service attack by filling up
# your drive by continuously writing to your command file!
#
# Setting this value to 0 will cause the CGIs to *not* use
# authentication (bad idea), while any other value will make them
# use the authentication functions (the default).

use_authentication=<%= @use_authentication %>




# x509 CERT AUTHENTICATION
# When enabled, this option allows you to use x509 cert (SSL)
# authentication in the CGIs.  This is an advanced option and should
# not be enabled unless you know what you're doing.

use_ssl_authentication=<%= @use_ssl_authentication %>




# DEFAULT USER
# Setting this variable will define a default user name that can
# access pages without authentication.  This allows people within a
# secure domain (i.e., behind a firewall) to see the current status
# without authenticating.  You may want to use this to avoid basic
# authentication if you are not using a secure server since basic
# authentication transmits passwords in the clear.
#
# Important:  Do not define a default username unless you are
# running a secure web server and are sure that everyone who has
# access to the CGIs has been authenticated in some manner!  If you
# define this variable, anyone who has not authenticated to the web
# server will inherit all rights you assign to this user!

<%= "default_user_name=#{@default_user_name}\n" if @default_user_name -%>



# SYSTEM/PROCESS INFORMATION ACCESS
# This option is a comma-delimited list of all usernames that
# have access to viewing the Icinga process information as
# provided by the Extended Information CGI (extinfo.cgi).  By
# default, *no one* has access to this unless you choose to
# not use authorization.  You may use an asterisk (*) to
# authorize any user who has authenticated to the web server.
# Alternatively you can specify contactgroups too, starting
# with Icinga 1.5.0

authorized_for_system_information=<%= @authorized_for_system_information %>
<%= "authorized_contactgroup_for_system_information=#{@authorized_contactgroup_for_system_information}\n" if @authorized_contactgroup_for_system_information -%>



# CONFIGURATION INFORMATION ACCESS
# This option is a comma-delimited list of all usernames that
# can view ALL configuration information (hosts, commands, etc).
# By default, users can only view configuration information
# for the hosts and services they are contacts for. You may use
# an asterisk (*) to authorize any user who has authenticated
# to the web server.

authorized_for_configuration_information=<%= @authorized_for_configuration_information %>
<%= "authorized_contactgroup_for_configuration_information=#{@authorized_contactgroup_for_configuration_information}\n" if @authorized_contactgroup_for_configuration_information -%>

# RAW COMMANDLINE CONFIGURATION INFORMATION ACCESS
# This option is a comma-delimited list of all usernames that
# can view a command in config command expander as icinga would
# execute it. To resolve all MACROS it is necessary to allow
# read access to the web server for resource.cfg .
# CAUTION: $USERXX$ vars and custom vars can contain sensitive
# data.
# Alternatively you can specify contactgroups too.

authorized_for_full_command_resolution=<%= @authorized_for_full_command_resolution %>
<%= "authorized_contactgroup_for_full_command_resolution=#{@authorized_contactgroup_for_full_command_resolution}\n" if @authorized_contactgroup_for_full_command_resolution -%>


# SYSTEM/PROCESS COMMAND ACCESS
# This option is a comma-delimited list of all usernames that
# can issue shutdown and restart commands to Icinga via the
# command CGI (cmd.cgi).  Users in this list can also change
# the program mode to active or standby. By default, *no one*
# has access to this unless you choose to not use authorization.
# You may use an asterisk (*) to authorize any user who has
# authenticated to the web server.

authorized_for_system_commands=<%= @authorized_for_system_commands %>
<%= "authorized_contactgroup_for_system_commands=#{@authorized_contactgroup_for_system_commands}\n" if @authorized_contactgroup_for_system_commands -%>



# GLOBAL HOST/SERVICE VIEW ACCESS
# These two options are comma-delimited lists of all usernames that
# can view information for all hosts and services that are being
# monitored.  By default, users can only view information
# for hosts or services that they are contacts for (unless you
# you choose to not use authorization). You may use an asterisk (*)
# to authorize any user who has authenticated to the web server.


authorized_for_all_services=<%= @authorized_for_all_services %>
authorized_for_all_hosts=<%= @authorized_for_all_hosts %>
<%= "authorized_contactgroup_for_all_services=#{@authorized_contactgroup_for_all_services}\n" if @authorized_contactgroup_for_all_services -%>
<%= "authorized_contactgroup_for_all_hosts=#{@authorized_contactgroup_for_all_hosts}\n" if @authorized_contactgroup_for_all_hosts -%>




# GLOBAL HOST/SERVICE COMMAND ACCESS
# These two options are comma-delimited lists of all usernames that
# can issue host or service related commands via the command
# CGI (cmd.cgi) for all hosts and services that are being monitored.
# By default, users can only issue commands for hosts or services
# that they are contacts for (unless you you choose to not use
# authorization).  You may use an asterisk (*) to authorize any
# user who has authenticated to the web server.

authorized_for_all_service_commands=<%= @authorized_for_all_service_commands %>
authorized_for_all_host_commands=<%= @authorized_for_all_host_commands %>
<%= "authorized_contactgroup_for_all_service_commands=#{@authorized_contactgroup_for_all_service_commands}\n" if @authorized_contactgroup_for_all_service_commands -%>
<%= "authorized_contactgroup_for_all_host_commands=#{@authorized_contactgroup_for_all_host_commands}\n" if @authorized_contactgroup_for_all_host_commands -%>


# READ-ONLY USERS
# A comma-delimited list of usernames that have read-only rights in
# the CGIs.  This will block any service or host commands normally shown
# on the extinfo CGI pages.  It will also block comments from being shown
# to read-only users.

authorized_for_read_only=<%= @authorized_for_read_only %>
<%= "authorized_contactgroup_for_read_only=#{@authorized_contactgroup_for_read_only}\n" if @authorized_contactgroup_for_read_only -%>

# SHOW ALL SERVICES THE HOST IS AUTHORIZED FOR
# By default, a user can see all services on a host, if the user is
# authorized as contact for the host only. By disabling this option,
# the user must be an authorized contact for the service too in order
# to view it.
# Values: 0 - disabled, user must be authorized for services too
#         1 - enabled, user can view all services on authorized host

show_all_services_host_is_authorized_for=<%= @show_all_services_host_is_authorized_for %>

# SHOW PARTIAL HOSTGROUPS
# By default, a user only sees a hostgroup and the hosts within it if
# they are an authorized contact for all of the hosts of the group. By
# enabling this option hostgroups will show a partial listing of hosts
# the user is an authorized contact for in the hostgroups.
# Values: 0 - disabled, user only sees full hostgroups (default)
#         1 - enabled, user sees partial hostgroups
show_partial_hostgroups=<%= @show_partial_hostgroups %>


# STATUSMAP BACKGROUND IMAGE
# This option allows you to specify an image to be used as a
# background in the statusmap CGI.  It is assumed that the image
# resides in the HTML images path (i.e. /usr/local/icinga/share/images).
# This path is automatically determined by appending "/images"
# to the path specified by the 'physical_html_path' directive.
# Note:  The image file may be in GIF, PNG, JPEG, or GD2 format.
# However, I recommend that you convert your image to GD2 format
# (uncompressed), as this will cause less CPU load when the CGI
# generates the image.

<%= "statusmap_background_image=#{@statusmap_background_image}\n" if @statusmap_background_image -%>




# STATUSMAP TRANSPARENCY INDEX COLOR
# These options set the r,g,b values of the background color used the statusmap CGI,
# so normal browsers that can't show real png transparency set the desired color as
# a background color instead (to make it look pretty).
# Defaults to white: (R,G,B) = (255,255,255).

<%= "color_transparency_index_r=#{@color_transparency_index_r}\n" if @color_transparency_index_r -%>
<%= "color_transparency_index_g=#{@color_transparency_index_g}\n" if @color_transparency_index_g -%>
<%= "color_transparency_index_b=#{@color_transparency_index_b}\n" if @color_transparency_index_b -%>




# DEFAULT STATUSMAP LAYOUT METHOD
# This option allows you to specify the default layout method
# the statusmap CGI should use for drawing hosts.  If you do
# not use this option, the default is to use user-defined
# coordinates.  Valid options are as follows:
#	0 = User-defined coordinates
#	1 = Depth layers
#       2 = Collapsed tree
#       3 = Balanced tree
#       4 = Circular
#       5 = Circular (Marked Up)

default_statusmap_layout=<%= @default_statusmap_layout %>


# REFRESH TYPE
# This option determines what type of refresh should be used.
# You can choose between http header and javascript. By
# default javascript (1) is activated. If you have trouble
# using javascript then try refresh via http header (0).

refresh_type=<%= @refresh_type %>


# DEFAULT STATUSWRL LAYOUT METHOD
# This option allows you to specify the default layout method
# the statuswrl (VRML) CGI should use for drawing hosts.  If you
# do not use this option, the default is to use user-defined
# coordinates.  Valid options are as follows:
#	0 = User-defined coordinates
#       2 = Collapsed tree
#       3 = Balanced tree
#       4 = Circular

default_statuswrl_layout=<%= @default_statuswrl_layout %>


# PERSISTENT ACKNOWLEDGEMENT COMMENTS
# This options determines whether the initial state of the
# checkbox "Persistent Comment:" for service and host problem
# acknowledgements is checked or unchecked

persistent_ack_comments=<%= @persistent_ack_comments %>

# STATUSWRL INCLUDE
# This option allows you to include your own objects in the
# generated VRML world.  It is assumed that the file
# resides in the HTML path (i.e. /usr/local/icinga/share).

<%= "statuswrl_include=#{@statuswrl_include}\n" if @statuswrl_include -%>



# PING SYNTAX
# This option determines what syntax should be used when
# attempting to ping a host from the WAP interface (using
# the statuswml CGI.  You must include the full path to
# the ping binary, along with all required options.  The
# $HOSTADDRESS$ macro is substituted with the address of
# the host before the command is executed.
# Please note that the syntax for the ping binary is
# notorious for being different on virtually ever *NIX
# OS and distribution, so you may have to tweak this to
# work on your system.

ping_syntax=<%= @ping_syntax %>



# REFRESH RATE
# This option allows you to specify the refresh rate in seconds
# of various CGIs (status, statusmap, extinfo, and outages).

refresh_rate=<%= @refresh_rate %>



# ESCAPE HTML TAGS
# This option determines whether HTML tags in host and service
# status output is escaped in the web interface.  If enabled,
# your plugin output will not be able to contain clickable links.

escape_html_tags=<%= @escape_html_tags %>

# RESULT LIMIT
# This options specifies the number of page entries
# displayed by default in various cgi's. To display
# all entries by default set this value to 0.
# Default is 50.

result_limit=<%= @result_limit %>


# SOUND OPTIONS
# These options allow you to specify an optional audio file
# that should be played in your browser window when there are
# problems on the network.  The audio files are used only in
# the status CGI.  Only the sound for the most critical problem
# will be played.  Order of importance (higher to lower) is as
# follows: unreachable hosts, down hosts, critical services,
# warning services, and unknown services. If there are no
# visible problems, the sound file optionally specified by
# 'normal_sound' variable will be played.
#
#
# <varname>=<sound_file>
#
# Note: All audio files must be placed in the /media subdirectory
# under the HTML path (i.e. /usr/local/icinga/share/media/).

<%= "host_unreachable_sound=#{@host_unreachable_sound}\n" if @host_unreachable_sound -%>
<%= "host_down_sound=#{@host_down_sound}\n" if @host_down_sound -%>
<%= "service_critical_sound=#{@service_critical_sound}\n" if @service_critical_sound -%>
<%= "service_warning_sound=#{@service_warning_sound}\n" if @service_warning_sound -%>
<%= "service_unknown_sound=#{@service_unknown_sound}\n" if @service_unknown_sound -%>
<%= "normal_sound=#{@normal_sound}\n" if @normal_sound -%>



# URL TARGET FRAMES
# These options determine the target frames in which notes and
# action URLs will open. Default is main frame.


action_url_target=<%= @action_url_target %>
notes_url_target=<%= @notes_url_target %>
#action_url_target=_blank
#notes_url_target=_blank



# LOCK AUTHOR NAMES OPTION
# This option determines whether users can change the author name
# when submitting comments, scheduling downtime.  If disabled, the
# author names will be locked into their contact name, as defined in Icinga.
# Values: 0 = allow editing author names
#         1 = lock author names (disallow editing)

lock_author_names=<%= @lock_author_names %>



# DEFAULT DOWNTIME DURATION
# This option defines the default duration (in seconds) of fixed and
# flexible downtimes. Default is 7200 seconds (2 hours).

default_downtime_duration=<%= @default_downtime_duration %>



# SET EXPIRE ACK BY DEFAULT
# This option either sets or clears the checkbox for "Use Expire Time"
# in the acknowledgement menu.  Valid values are 0 (DO NOT tick the
# checkbox by default) or 1 (tick the checkbox by default).  The default
# is 0 (leave the checkbox blank).

set_expire_ack_by_default=<%= @set_expire_ack_by_default %>



# DEFAULT EXPIRING ACKNOWLEDGEMENT DURATION
# This option defines the default duration (in seconds) of a expiring
# acknowledgement. Default is 86400 seconds (1 day).

default_expiring_acknowledgement_duration=<%= @default_expiring_acknowledgement_duration %>



# SHOW LONG PLUGIN OUTPUT IN STATUS OPTION
# This option allows you to specify the length of status information
# in output of status.cgi. If you set the value to 1 it shows the
# full plugin output instead of the first line only.
# Default value is 0.

status_show_long_plugin_output=<%= @status_show_long_plugin_output %>



# DISPLAY STATUS TOTAL
# This option allows you to specify if the
# Host Status Totals and Service Status Totals
# should be displayed.
# Default value is 0.

display_status_totals=<%= @display_status_totals %>



# SHOW ONLY HARD STATES IN TAC OPTION
# This options allows you to specify if the tactical overview
# should only show hard states on hosts and services.
# By default disabled, all states will be shown.

tac_show_only_hard_state=<%= @tac_show_only_hard_state %>



# SHOW CHILD HOSTS IN EXTINFO OPTION
# This Option allows you to specify if the extended host information
# cgi will show child hosts for the selected host.
#	0 = disabled
#	1 = only show immediate child hosts
#	2 = show immediate and all child hosts
# NOTE: Option 2 could be a real performance killer in
# large installations, so use with care.
# By default disabled, as this could be a performance killer.

extinfo_show_child_hosts=<%= @extinfo_show_child_hosts %>



# SUPPRESS MAINTENANCE DOWNTIME
# This options suppresses the state coloring of hosts and services
# that are in a scheduled downtime. It sets their coloring to gray,
# so they no longer draw extra attention to themselves, making it
# so only actual problems are the ones that stand out.
# By default it is disabled.

suppress_maintenance_downtime=<%= @suppress_maintenance_downtime %>


# SHOW TAC INFORMATION IN TOP FRAME
# This options places tactical overview information in
# the top frame similar to the view that's in icinga-web.
# By default it is enabled.

show_tac_header=<%= @show_tac_header %>


# SHOW PENDING IN TAC HEADER
# This options enables the display of pending counts in
# the tac header. If your display is less than 1024x768
# and this is enabled, the tactical information may not
# fit well in the top frame.
# By default it is enabled.

show_tac_header_pending=<%= @show_tac_header_pending %>



######################################
#
#   EXTENDED INFO (extinfo.cgi)
#
######################################

# EXCLUDE CUSTOMVAR NAMES
# This Option allows you to specify a comma seperated list of
# custom variable names which are automatically excluded when
# a variable name would contain that name.
# NOTE: For security reasons, you should at least exclude all
# sensitive information like passwords, snmp communities, etc
# Use * to exclude all custom variable names.

exclude_customvar_name=<%= @exclude_customvar_name %>



# EXCLUDE CUSTOMVAR VALUES
# This Option allows you to specify a comma seperated list of
# custom variable values which are automatically excluded when
# a variable value would contain that value.
# NOTE: For security reasons, you should at least exclude all
# sensitive information like passwords, snmp communities, etc
# Use * to exclude all custom variable values.

exclude_customvar_value=<%= @exclude_customvar_value %>


######################################
#
#   SHOWLOG (showlog.cgi)
#
######################################

# SHOW INITIAL STATES IN SHOWLOG OPTION
# This options allows you to specify if initial states
# of hosts and services should be shown in showlog.cgi
# Note: This Option only works if the option
# "log_initial_states" in icinga.cfg is set to 1.
# By default it's disabled. Default is 0.

<%= "showlog_initial_states=#{@showlog_initial_states}\n" if @showlog_initial_states -%>



# SHOW CURRENT STATES IN SHOWLOG OPTION
# This options allows you to specify if current states
# of hosts and services should be shown in showlog.cgi
# Note: This Option only works if the option
# "log_current_states" in icinga.cfg is set to 1.
# By default it's enabled. Default is 0.

<%= "showlog_current_states=#{@showlog_current_states}\n" if @showlog_current_states -%>



# DEFAULT NUM DISPLAYED LOG ENTRIES OPTION
# This options specifies the number of log entries
# displayed by default in showlog.cgi. To display
# all log entries by default set this value to 0.
# Default is 10000.

<%= "default_num_displayed_log_entries=#{@default_num_displayed_log_entries}\n" if @default_num_displayed_log_entries -%>



# CSV DELIMITER
# This option determines the character which should act as
# delimiter. Default is ";".

<%= "csv_delimiter=#{@csv_delimiter}\n" if @csv_delimiter -%>



# CSV DATA ENCLOSURE
# This option determines the character which should act as
# data enclosure to wrap in the data. Default is "'".

<%= "csv_data_enclosure=#{@csv_data_enclosure}\n" if @csv_data_enclosure -%>



# TAB-FRIENDLY <TITLE>S
# Activating this option changes the <title> of status.cgi
# and extinfo.cgi when they refer to a single host, service,
# or group. They will then read:
#	[Host]
#	{HostGroup}
#	ServiceDesc @ Host
#	(ServiceGroup)
# These are easier to read and find if you use (many) tabs
# in your browser.
# Default is enabled. 0=disabled, 1=enabled

tab_friendly_titles=<%= @tab_friendly_titles %>


# SERVICE STATES TO ANNOTATE WITH CURRENT NOTIFICATION NO.
# Set this to an OR of the service state identifiers for
# which status.cgi should not only report "Attempts" (e.g.,
# "3/3" for a HARD non-OK state with max_check_attempts=3)
# but also the current notification number ("(#0)" if no
# problem notification has been sent yet, etc.). This is
# helpful to identify services which switched between
# different non-OK states a lot, or services which have a
# first_notification_delay set and are "not yet officially"
# considered in trouble.
# Relevant values from include/statusdata.h (look them up
# *there* if you want to be *really* sure):
#	#define	SERVICE_PENDING		1
#	#define	SERVICE_OK		2
#	#define	SERVICE_WARNING		4
#	#define	SERVICE_UNKNOWN		8
#	#define	SERVICE_CRITICAL	16
# You'll likely want to use add_notif_num_hard=0 (default)
# or add_notif_num_hard=28 (warn+crit+unknown). There's an
# add_notif_num_soft affecting services in a SOFT state
# for sake of completeness, too.

add_notif_num_hard=<%= @add_notif_num_hard %>
add_notif_num_soft=<%= @add_notif_num_soft %>

# SPLUNK INTEGRATION OPTIONS
# These options allow you to enable integration with Splunk
# in the web interface.  If enabled, you'll be presented with
# "Splunk It" links in various places in the CGIs (log file,
# alert history, host/service detail, etc).  Useful if you're
# trying to research why a particular problem occurred.
# For more information on Splunk, visit http://www.splunk.com/

# This option determines whether the Splunk integration is enabled
# Values: 0 = disable Splunk integration
#         1 = enable Splunk integration

<%= "enable_splunk_integration=#{@enable_splunk_integration}\n" if @enable_splunk_integration -%>


# This option should be the URL used to access your instance of Splunk

<%= "splunk_url=#{@splunk_url}\n" if @splunk_url -%>

######################################
#
#    STANDALONE (ICINGA 2) OPTIONS
#    requires standalone_installation=1
#
######################################

# OBJECT CACHE FILE
# This option determines where object definitions are cached when
# Icinga starts/restarts. The CGIs read object definitions from
# this cache file (rather than looking at the object config files
# directly) in order to prevent inconsistencies that can occur
# when the config files are modified after Icinga starts.
# Icinga 2 provides this file through its compat component, if enabled.

object_cache_file=<%= @object_cache_file %>



# STATUS FILE
# This is where the current status of all monitored services and
# hosts is stored.  Its contents are read and processed by the CGIs.
# The contents of the status file are deleted every time Icinga
# restarts.
# Icinga 2 provides this file through its compat component, if enabled.

status_file=<%= @status_file %>



# RESOURCE FILE
# This is an optional resource file that contains $USERx$ macro
# definitions. Multiple resource files can be specified by using
# multiple resource_file definitions.  The CGIs will not attempt to
# read the contents of resource files, so information that is
# considered to be sensitive (usernames, passwords, etc) can be
# defined as macros in this file and restrictive permissions (600)
# can be placed on this file.

resource_file=<%= @resource_file %>



# EXTERNAL COMMAND FILE
# This is the file that Icinga checks for external command requests.
# It is also where the command CGI will write commands that are submitted
# by users, so it must be writeable by the user that the web server
# is running as (usually 'nobody').  Permissions should be set at the
# directory level instead of on the file, as the file is deleted every
# time its contents are processed.
# Icinga 2 provides this file through its compat component, if enabled.

command_file=<%= @command_file %>

# EXTERNAL COMMAND OPTION
# This option allows you to specify whether or not Icinga should check
# for external commands (in the command file defined below).  By default
# Icinga will *not* check for external commands, just to be on the
# cautious side.  If you want to be able to use the CGI command interface
# you will have to enable this.
# Values: 0 = disable commands, 1 = enable commands

check_external_commands=<%= @check_external_commands %>



# INTERVAL LENGTH
# This is the seconds per unit interval as used in the
# host/contact/service configuration files.  Setting this to 60 means
# that each interval is one minute long (60 seconds).  Other settings
# have not been tested much, so your mileage is likely to vary...

interval_length=<%= @interval_length %>



# STATUS FILE UPDATE INTERVAL
# This option determines the frequency (in seconds) that
# Icinga will periodically dump program, host, and
# service status data.
# Increase the value, if you don't require it that often.

status_update_interval=<%= @status_update_interval %>



# LOG FILE
# This is the main log file where service and host events are logged
# for historical purposes.  This should be the first option specified
# in the config file!!!
# Icinga 2 provides this file through its compat component, if enabled.

log_file=<%= @log_file %>



# LOG ROTATION METHOD
# This is the log rotation method that Icinga should use to rotate
# the main log file. Values are as follows..
# n = None - don't rotate the log
# h = Hourly rotation (top of the hour)
# d = Daily rotation (midnight every day)
# w = Weekly rotation (midnight on Saturday evening)
# m = Monthly rotation (midnight last day of month)

log_rotation_method=<%= @log_rotation_method %>

# LOG ARCHIVE PATH
# This is the directory where archived (rotated) log files should be
# placed (assuming you've chosen to do log rotation).
# Icinga 2 provides this file through its compat component, if enabled.

log_archive_path=<%= @log_archive_path %>



# DATE FORMAT OPTION
# This option determines how short dates are displayed. Valid options
# include:
# us    (MM-DD-YYYY HH:MM:SS)
# euro      (DD-MM-YYYY HH:MM:SS)
# iso8601   (YYYY-MM-DD HH:MM:SS)
# strict-iso8601  (YYYY-MM-DDTHH:MM:SS)
#

date_format=<%= @date_format %>

#   EOF

